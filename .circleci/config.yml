version: 2.1

common: &common
  working_directory: ~/repo
  docker:
    - image: circleci/node:14.6-browsers
    
commands: # a reusable command with parameters
  restore-source-cache:
    steps:
      - restore_cache:
          keys: 
            - source-{{ .Branch }}-{{ .Revision }}
  restore-node-cache:
    steps:
      - restore_cache:
          keys: 
            - dependency-cache-{{ checksum "package-lock.json" }}
  clear-git-garbage:
    steps:
      - run: 
          name: "Manually Clear Git Garbage"
          command: "git gc"     #clear git barbage for smaller cache
  build-app:
    steps:
      - run:
          name: 'Build app'
          command: npm run build
  save-source-cache:
    steps:
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - '.git'
jobs:
  Checkout-Repo:
    <<: *common
    steps:
      # Optimization: Takes advantage of cached data
      - restore-source-cache
      - checkout        # Put in current working directory
      - clear-git-garbage
      - save-source-cache
  install:
    <<: *common
    steps:
      - restore-source-cache
      - restore-node-cache
      - run:
          name: "Install packages with yarn"
          command:  yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  test:
    <<: *common
    steps:
      - Restore-Cache
      - run:
          name: 'Run Tests'
          command: npm run test
  build:
    <<: *common
    steps:
      - restore-source-cache
      - build-app
      - persist_to_workspace:
          root: ~/repo
          paths:
            - build
            - package.json


workflows:
  version: 2
  Deployment:
    jobs:
      - Checkout-Repo