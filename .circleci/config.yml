version: 2.1

executors:
  node_14_6-browsers:
    working_directory: ~/repo
    docker:
      - image: circleci/node:14.6-browsers

workflows:
  version: 2

  Deployment:
    jobs:
      - Checkout-Repo
      - Deploy-to-Heroku:
          requires:
            - Checkout-Repo
          filters:
            branches:
              only: master

jobs:
  Checkout-Repo:
    executor: node_14_6-browsers
    steps:
      - restore-source-cache       # Optimization: Takes advantage of cached data
      - checkout        # Put in current working directory
      - clear-git-garbage
      - save-source-cache
  install:
    executor: node_14_6-browsers
    steps:
      - restore-source-cache 
      - restore-node-cache 
      - install-packages
      - save-node-cache
  test:
    executor: node_14_6-browsers
    steps:
      - restore-source-cache
      - run-test
  build:
    executor: node_14_6-browsers
    steps:
      - restore-source-cache
      - run-build
      - persist-to-workspace
  Deploy-to-Heroku:
    executor: node_14_6-browsers
    steps:
      - restore-source-cache       # Optimization: Takes advantage of cached data
      - checkout        # Put in current working directory
      - clear-git-garbage
      - save-source-cache 
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

commands: # reusable commands with parameters
  restore-source-cache:
    steps:
      - restore_cache:
          keys: 
            - source-{{ .Branch }}-{{ .Revision }}
  restore-node-cache:
    steps:
      - restore_cache:
          keys: 
            - dependency-cache-{{ checksum "package-lock.json" }}
  clear-git-garbage:
    steps:
      - run: 
          name: "Manually Clear Git Garbage"
          command: "git gc"     #clear git barbage for smaller cache
  run-build:
    steps:
      - run:
          name: 'Build app'
          command: npm run build
  run-test:
    steps:
      - run:
          name: 'Run Tests'
          command: npm run test
  save-source-cache:
    steps:
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - '.git'
  install-packages:
    steps:
     - run:
        name: "Install packages with yarn"
        command:  yarn install
  save-node-cache:
    steps:
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
  persist-workspace:
    steps:
      - persist_to_workspace:
          root: ~/repo
          paths:
            - build
            - package.json
          